name: Docker Image CI/CD

# Trigger workflow on push to the master branch
on:
  push:
    branches:
      - master  
    paths:
      - 'pythondocker/requirements.txt'  # Trigger only on changes to specific files
      - 'pythondocker/app.py'             
      - 'pythondocker/Dockerfile'

# Define the jobs and the sequence of steps
jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to DockerHub using GitHub secrets
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          # Build the Docker image using the correct directory as the build context
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }} ./pythondocker
          
      # Step 4: Implement Docker Scout to check for vulnerabilities
      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          organization: ${{ secrets.DOCKER_USERNAME }}
          command: cves,recommendations,compare
          to-latest: true
          ignore-base: true
          ignore-unchanged: true
          only-fixed: true

      # Step 5: Push the Docker image to DockerHub
      - name: Push Docker image
        run: |
          # Push the image using the commit SHA (unique for every commit)
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}
          
      # Step 6: Tag the image with 'latest' and push
      - name: Tag and Push latest
        run: |
          # Tag the image as 'latest' and push it
          docker tag ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

